"use strict";
//把ts 文件编译为js文件
let setting = require('./rxmPackageSetting')
let gulp = require('gulp');
let pump = require('pump');
let ts = require('gulp-typescript');
let sourcemaps = require('gulp-sourcemaps')
let uglify = require('gulp-uglify')
let concat = require('gulp-concat')
let plumber = require('gulp-plumber')
function rxmPackageJsTask() {
    //src: Array<string>
    //dstJsName: string
    //dstPath: string
    let _conf = {
        "target": "es5",
        "module": "amd",
        "allowJs": true,
        "outDir": "ztempCompile",
        "strict": false,
        "esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    };
    let fret = function () {
    
        let src = this.src
        let jsname = this.dstJsName
        let dst = this.dstPath
        console.info('ts和js合并压缩混淆')
        console.info('源路径: ' + src)
        console.info('目的路径' + dst);
        (jsname.lastIndexOf('.js') !== jsname.length - 3) && (jsname = jsname + '_' + setting().version + '.js')
        console.info('目标文件' + jsname);
        let cf = Object.assign({}, _conf);
        let tsProject = ts.createProject(cf)
        return gulp.src(src)
            .pipe(plumber())
            .pipe(tsProject())
            .pipe(gulp.dest('zcompile/result/'+jsname))
            .pipe(sourcemaps.init())
            .pipe(concat(jsname))
            // .pipe(uglify({
            //     mangle: true,//类型：Boolean 默认：true 是否修改变量名
            //     compress: true,//类型：Boolean 默认：true 是否完全压缩
                
            // }))
            .pipe(sourcemaps.write('.'))
            .pipe(plumber.stop())
            .pipe(gulp.dest(dst))
    }
    return fret

}
module.exports = rxmPackageJsTask;
